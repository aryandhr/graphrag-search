steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/graphrag-search:$BUILD_ID', '.']
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/graphrag-search:$BUILD_ID']
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'graphrag-search'
      - '--image'
      - 'gcr.io/$PROJECT_ID/graphrag-search:$BUILD_ID'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '4Gi'
      - '--cpu'
      - '2'
      - '--timeout'
      - '3600'
      - '--max-instances'
      - '10'
      - '--set-env-vars'
      - 'NEO4J_URI=${_NEO4J_URI},NEO4J_DATABASE=${_NEO4J_DATABASE},NEO4J_USERNAME=${_NEO4J_USERNAME},POSTGRES_HOST=${_POSTGRES_HOST},POSTGRES_DATABASE=${_POSTGRES_DATABASE},POSTGRES_USER=${_POSTGRES_USER},POSTGRES_PORT=${_POSTGRES_PORT}'
      - '--set-secrets'
      - 'NEO4J_PASSWORD=neo4j-password:latest,OPENAI_API_KEY=openai-api-key:latest,GRAPHRAG_API_KEY=openai-api-key:latest,POSTGRES_PASSWORD=postgres-password:latest'

# Store images in Google Container Registry
images:
  - 'gcr.io/$PROJECT_ID/graphrag-search:$BUILD_ID'

# Substitutions for non-sensitive environment variables
# These will be passed from the deployment script or can be overridden
substitutions:
  _NEO4J_URI: ''  # Will be set from .env via deployment script
  _NEO4J_DATABASE: 'neo4j'
  _NEO4J_USERNAME: 'neo4j'
  # PostgreSQL settings (leave empty if not using PostgreSQL)
  _POSTGRES_HOST: ''
  _POSTGRES_DATABASE: ''
  _POSTGRES_USER: ''
  _POSTGRES_PORT: '5432' 